{"version":3,"file":"static/js/338.3aa9e80a.chunk.js","mappings":"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","sources":["components/UI/HeadTitle/HeadTitle.Styled.js","components/UI/HeadTitle/HeadTitle.jsx","components/RegisterForm/RegisterForm.Styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.Styled.js","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n\n  font-size: ${({ size }) => {\n    if (!size) {\n      return '20px';\n    }\n\n    return `${size}px`;\n  }};\n\n  margin-bottom: ${({ mb }) => {\n    if (!!mb || mb === undefined) {\n      return '15px';\n    }\n    return `${mb}px`;\n  }};\n\n  margin-top: ${({ mt }) => {\n    if (!!mt || mt === undefined) {\n      return '15px';\n    }\n    return `${mt}px`;\n  }};\n\n  justify-content: center;\n`;\n","import { Title } from './HeadTitle.Styled';\nimport PropTypes from 'prop-types';\n\nexport const HeadTitle = ({ title, size, mb, mt }) => {\n  return (\n    <Title size={size} mb={mb} mt={mt}>\n      {title}\n    </Title>\n  );\n};\nHeadTitle.propTypes = {\n  title: PropTypes.string,\n  size: PropTypes.number,\n  mb: PropTypes.number,\n  mt: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { userRegister } from 'redux/auth/operations';\n\nimport { Wrapper } from './RegisterForm.Styled';\n\nimport { HeadTitle } from 'components/UI/HeadTitle/HeadTitle';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\n\n\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        break;\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const credentials = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(userRegister(credentials));\n\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <HeadTitle title={'Register page'} size={30} />\n      <Box component=\"form\" onSubmit={handleFormSubmit}>\n        <FormControl sx={{ width: '25ch', mt: 1 }}>\n          \n          <div>\n            <TextField\n            onChange={handleChange}\n            value={name}\n            name=\"name\"\n            label=\" User name\"\n            variant=\"outlined\"\n            color=\"info\"\n            id=\"outlined-basic\"\n            sx={{mb: 1,\n              '& .MuiInputBase-input': {\n                color: 'black', // Kolor tekstu wejściowego\n              },\n              '& .MuiInputLabel-root': {\n                color: 'black', // Kolor etykiety\n              },\n              '& .MuiInputLabel-root.Mui-focused': {\n                color: '#93F600', // Kolor etykiety w stanie focus\n                fontSize: '20px', // Wielkość etykiety w stanie focus\n                transform: 'translate(14px, -12px) scale(0.75)', // Transformacja etykiety w stanie focus\n                backgroundColor: 'white', // Kolor tła etykiety w stanie focus\n                padding: '0 4px',\n              },\n              '& .MuiOutlinedInput-root': {\n                '& fieldset': {\n                  borderColor: '#1c84fa', // Kolor obramowania domyślnego\n                },\n                '&:hover fieldset': {\n                  borderColor: '#1c84fa', // Kolor obramowania podczas hover\n                },\n                '&:active fieldset': {\n                  borderColor: '#1c84fa', // Kolor obramowania podczas hover\n                },\n                '& .MuiOutlinedInput-notchedOutline': {\n                  borderColor: '#54b95f', // Kolor obramowania\n                  borderWidth: '3px',\n                },\n                backgroundColor: 'ffffff',\n              },\n            }}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            autoComplete=\"off\"\n            required\n            style={{ background: \"rgb(255, 255, 255, 0.8)\" }}\n          />\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              variant=\"outlined\"\n              color=\"info\"\n              sx={{ \n                mb: 2, \n                width: '25ch',\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'white', // Ustaw kolor tła dla całego pola tekstowego\n                  '& fieldset': {\n                    borderColor: '#54b95f', // Kolor obramowania\n                    borderWidth: '3px',\n                  },\n                  '&:hover fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas najechania\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas fokusa\n                    borderWidth: '3px',\n                  },\n                  '& input': {\n                    color: 'black', // Kolor tekstu wewnątrz pola\n                    backgroundColor: 'white', // Kolor tła wewnątrz pola\n                  },\n                  '& input::placeholder': {\n                    color: 'black', // Kolor tekstu placeholdera\n                  },\n                  // Stylizacja dla autofill\n                  '& input:-webkit-autofill': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu\n                    WebkitBoxShadow: '0 0 0 100px white inset', // Zapewnia, że tło pozostaje białe\n                    WebkitTextFillColor: 'black !important', // Kolor tekstu po automatycznym wypełnieniu\n                  },\n                  // Dodatkowe pseudo-stany dla autofill\n                  '& input:-webkit-autofill:hover': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy najechaniu\n                  },\n                  '& input:-webkit-autofill:focus': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy fokusu\n                  },\n                  '& input:-webkit-autofill:active': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy aktywacji\n                  },\n                },\n                '& .MuiInputLabel-root': {\n                  color: 'black', // Kolor etykiety w normalnym stanie\n                },\n                '& .MuiInputLabel-root.Mui-focused': {\n                  color: '#93F600', // Kolor etykiety podczas fokusa\n                  fontSize: '20px',\n                  transform: 'translate(14px, -12px) scale(0.75)', // Transformacja etykiety w stanie focus\n                  backgroundColor: 'white', // Kolor tła etykiety w stanie focus\n                  padding: '0 4px',\n                },\n              }}\n            />\n\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              color=\"info\"\n              sx={{ \n                mb: 2, \n                width: '25ch',\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'white', // Kolor tła dla całego pola tekstowego\n                  '& fieldset': {\n                    borderColor: '#54b95f', // Kolor obramowania\n                    borderWidth: '3px',\n                  },\n                  '&:hover fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas najechania\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas fokusa\n                    borderWidth: '3px',\n                  },\n                  '& input': {\n                    color: 'black', // Kolor tekstu wewnątrz pola\n                    backgroundColor: 'white', // Kolor tła wewnątrz pola\n                  },\n                  '& input::placeholder': {\n                    color: 'black', // Kolor tekstu placeholdera\n                  },\n                  // Stylizacja dla autofill\n                  '& input:-webkit-autofill': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu\n                    WebkitBoxShadow: '0 0 0 100px white inset', // Zapewnia, że tło pozostaje białe\n                    WebkitTextFillColor: 'black !important', // Kolor tekstu po automatycznym wypełnieniu\n                  },\n                  // Dodatkowe pseudo-stany dla autofill\n                  '& input:-webkit-autofill:hover': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy najechaniu\n                  },\n                  '& input:-webkit-autofill:focus': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy fokusu\n                  },\n                  '& input:-webkit-autofill:active': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy aktywacji\n                  },\n                },\n                '& .MuiInputLabel-root': {\n                  color: 'black', // Kolor etykiety w normalnym stanie\n                },\n                '& .MuiInputLabel-root.Mui-focused': {\n                  color: '#93F600', // Kolor etykiety podczas fokusa\n                  fontSize: '20px',\n                  transform: 'translate(14px, -12px) scale(0.75)', // Transformacja etykiety w stanie focus\n                  backgroundColor: 'white', // Kolor tła etykiety w stanie focus\n                  padding: '0 4px',\n                },\n              }}\n            />\n          </div>\n        </FormControl>\n        <Stack>\n        <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"success\"\n            size=\"large\"\n            sx={{\n              mb: 2,\n              background: \"rgb(28, 132, 250, 0.8)\",\n              color: \"#ffffff\", // Kolor tekstu\n              padding: '14px 0px',\n              '&:hover': {\n                backgroundColor: \"#93F600\", // Kolor tła po najechaniu\n                borderColor: '#93F600',\n              },\n            }}\n              >\n            Register\n          </Button>\n        </Stack>\n      </Box>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Wrapper } from './Register.Styled';\n\nexport default function Register() {\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Wrapper>\n  );\n}\n"],"names":["Title","styled","size","mb","undefined","mt","HeadTitle","title","Wrapper","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","Box","component","onSubmit","e","preventDefault","credentials","userRegister","FormControl","sx","width","TextField","onChange","target","value","label","variant","color","id","fontSize","transform","backgroundColor","padding","borderColor","borderWidth","type","pattern","autoComplete","required","style","background","WebkitBoxShadow","WebkitTextFillColor","Stack","Button","Register","Helmet"],"sourceRoot":""}