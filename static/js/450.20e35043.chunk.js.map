{"version":3,"file":"static/js/450.20e35043.chunk.js","mappings":"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","sources":["components/UI/HeadTitle/HeadTitle.Styled.js","components/UI/HeadTitle/HeadTitle.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.Styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.Styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.Styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.Styled.js","components/EditModal/EditModal.Styled.js","components/EditModal/EditModal.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n\n  font-size: ${({ size }) => {\n    if (!size) {\n      return '20px';\n    }\n\n    return `${size}px`;\n  }};\n\n  margin-bottom: ${({ mb }) => {\n    if (!!mb || mb === undefined) {\n      return '15px';\n    }\n    return `${mb}px`;\n  }};\n\n  margin-top: ${({ mt }) => {\n    if (!!mt || mt === undefined) {\n      return '15px';\n    }\n    return `${mt}px`;\n  }};\n\n  justify-content: center;\n`;\n","import { Title } from './HeadTitle.Styled';\nimport PropTypes from 'prop-types';\n\nexport const HeadTitle = ({ title, size, mb, mt }) => {\n  return (\n    <Title size={size} mb={mb} mt={mt}>\n      {title}\n    </Title>\n  );\n};\nHeadTitle.propTypes = {\n  title: PropTypes.string,\n  size: PropTypes.number,\n  mb: PropTypes.number,\n  mt: PropTypes.number,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, filterValue) => {\n    const normalizeFilterValue = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilterValue)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport PersonAddAlt1OutlinedIcon from '@mui/icons-material/PersonAddAlt1Outlined';\n\nimport { Notify } from 'notiflix';\nimport { HeadTitle } from 'components/UI/HeadTitle/HeadTitle';\nimport { Wrapper } from './ContactForm.Styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    for (const contactItem of contacts) {\n      const normalizeStateName = contactItem.name.toLowerCase();\n      const normalizeFormName = name.toLowerCase();\n\n      if (normalizeStateName === normalizeFormName) {\n        return Notify.warning(`${contactItem.name}, is already in contacts!'`);\n      }\n    }\n\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <HeadTitle title={'Create new contact'} />\n\n      <Box component=\"form\" onSubmit={handleFormSubmit}>\n        <FormControl sx={{ width: '25ch', mt: 1 }}>\n          <TextField\n            onChange={handleChange}\n            label=\"Name\"\n            variant=\"outlined\"\n            color=\"info\"\n            id=\"outlined-basic\"\n            sx={{ mb: 2 }}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            value={name}\n            autoComplete=\"off\"\n            required\n            style={{background: \"rgb(255, 255, 255, 0.8)\"}}\n          />\n\n          <TextField\n            name=\"number\"\n            type=\"tel\"\n            onChange={handleChange}\n            value={number}\n            label=\"Number\"\n            variant=\"outlined\"\n            color=\"info\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            id=\"outlined-basic\"\n            sx={{ mb: 1 }}\n            maxLength=\"16\"\n            autoComplete=\"off\"\n            required\n            style={{background: \"rgb(255, 255, 255, 0.8)\"}}\n          />\n        </FormControl>\n        <Stack>\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"success\"\n            size=\"large\"\n            endIcon={<PersonAddAlt1OutlinedIcon size=\"medium\" />}\n            style={{background: \"rgb(255, 255, 255, 0.8)\"}}\n          >\n            Add contact\n          </Button>\n        </Stack>\n      </Box>\n    </Wrapper>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { updateFilterValue } from 'redux/contacts/slice';\n\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = ({ currentTarget: { value } }) => {\n    dispatch(updateFilterValue(value.toLocaleLowerCase()));\n  };\n\n  return (\n    <TextField\n      onChange={filterHandler}\n      id=\"outlined-basic\"\n      label=\"Search by name\"\n      variant=\"outlined\"\n      color=\"info\"\n      sx={{ mt: 1, minWidth: 500 }}\n      style={{background: \"rgb(255, 255, 255, 0.8)\"}}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const TableData = styled.td`\npadding: 10px 0 10px 0;\n\n\n\n&.tools,\n&.center {\n  text-align: center;\n  }\n  & svg {\n    color: #198754;\n  }\n  &:hover svg {\n    fill: #54b95f;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { removeContact } from 'redux/contacts/operations';\nimport { TableData } from './ContactListItem.Styled';\n\nimport AccountCircleRoundedIcon from '@mui/icons-material/AccountCircleRounded';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport PropTypes from 'prop-types';\n\nexport const ContactListItem = ({\n  name,\n  number,\n  id,\n  toggleEditModal,\n  getContactInfo,\n}) => {\n  const dispatch = useDispatch();\n\n  const onDeleteClick = () => dispatch(removeContact(id));\n\n  const handleChangeInfo = () => {\n    const contactInfo = { name, number, id };\n    toggleEditModal();\n    getContactInfo(contactInfo);\n  };\n\n  return (\n    <tr>\n      <td>\n        <AccountCircleRoundedIcon \n          color=\"info\"\n          />\n      </td>\n      <TableData>{name}</TableData>\n      <TableData className=\"center\">{number}</TableData>\n      <TableData className=\"tools\">\n        <IconButton\n          id={id}\n          type=\"button\"\n          size=\"small\"\n          onClick={handleChangeInfo}\n        >\n          <ModeEditIcon />\n        </IconButton>\n      </TableData>\n      <TableData className=\"tools\">\n        <IconButton size=\"small\" id={id} type=\"button\" onClick={onDeleteClick}>\n          <DeleteIcon />\n        </IconButton>\n      </TableData>\n    </tr>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const InfoText = styled.p`\nmax-width: 500px;\nmargin-top: 30px;\nfont-size: 20px;\ntext-align: center;\ncolor: rgba(0, 0, 0, 0.75);\n`;\n\nexport const ListWrap = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n\nmargin-top: 15px;\nmin-width: 500px;\n\nborder-radius: 8px;\n`;\n\nexport const LoadingWrap = styled.div`\nmargin-top: 30px;\ndisplay: flex;\njustify-content: center;\n`;\n\nexport const Table = styled.table`\nbackground-color: rgba(178, 186, 187, 0.7);\nborder-radius: 8px;\n\npadding: 10px;\n`;\n\nexport const TableHead = styled.th`\n  text-align: center;\n  padding: 5px;\n\n  &.start {\n    text-align: start;\n  }\n`;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAllContacts,\n  selectFilteredContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport {\n  ListWrap,\n  InfoText,\n  Wrapper,\n  Table,\n  TableHead,\n  LoadingWrap,\n} from './ContactList.Styled';\nimport { HeadTitle } from 'components/UI/HeadTitle/HeadTitle';\n\nexport const ContactsList = ({ getContactInfo, toggleEditModal }) => {\n  const contacts = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <HeadTitle title={'Contacts list'} />\n      <Filter />\n\n      {!contacts.length && !isLoading && (\n        <InfoText>\n          Your contact list is empty. Please add a new contact to see it in the\n          saved list.\n        </InfoText>\n      )}\n\n      {!!(contacts.length && !isLoading) &&\n        (!visibleContacts.length ? (\n          <InfoText>Sorry. No results!</InfoText>\n        ) : (\n          <ListWrap>\n            <Table>\n              <thead>\n                <tr>\n                  <TableHead></TableHead>\n                  <TableHead className=\"start\">Name</TableHead>\n                  <TableHead>Number</TableHead>\n                  <TableHead>Edit</TableHead>\n                  <TableHead>Delate</TableHead>\n                </tr>\n              </thead>\n              <tbody>\n                {visibleContacts.map(({ id, name, number }) => (\n                  <ContactListItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    id={id}\n                    getContactInfo={getContactInfo}\n                    toggleEditModal={toggleEditModal}\n                  />\n                ))}\n              </tbody>\n            </Table>\n          </ListWrap>\n        ))}\n\n      {isLoading && !error && (\n        <LoadingWrap>\n          <CircularProgress color=\"success\" />\n        </LoadingWrap>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  justify-content: space-around;\n  margin-top: 30px;\n`;\n\nexport const FormWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  top: 0;\n  left: 0;\n\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n`;\n\nexport const Modal = styled.div`\n  width: 300px;\n  padding: 40px;\n  position: relative;\n  background-color: rgba(178, 186, 187);\n\n  border-radius: 8px;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  right: 0;\n\n  margin: 5px 5px 0 0;\n\n  width: 40px;\n  height: 40px;\n\n  color: #54b95f;\n\n  padding: 3px;\n  background-color: transparent;\n\n  border: none;\n  border-radius: 50%;\n\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.445, 0.05, 0.55, 0.95),\n    transform 250ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.2);\n    transform: scale(0.9);\n    color: #456642;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  height: 30px;\n  border-radius: 5px;\n\n  margin-left: 10px;\n  padding-left: 15px;\n  height: 50px;\n\n  border: none;\n\n  &:first-child {\n    margin-bottom: 10px;\n  }\n\n  font-size: 18px;\n  font-family: inherit;\n  background-color: rgba(255, 255, 255, 0.5);\n\n  transition: border-color 250ms cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    background-color 250ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n  &:hover,\n  &:focus {\n    background-color: rgba(255, 255, 255, 0.3);\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  align-self: center;\n\n  width: 50px;\n  height: 50px;\n\n  color: #54b95f;\n\n  margin-top: 10px;\n\n  cursor: pointer;\n  border-radius: 50%;\n  border: none;\n\n  background-color: transparent;\n\n  transition: background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    scale 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n  & svg {\n    height: 30px;\n    width: 30px;\n  }\n  &:hover svg {\n    fill: #198754;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.2);\n    scale: 0.9;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { updateContact } from 'redux/contacts/operations';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport DownloadDoneIcon from '@mui/icons-material/DownloadDone';\n\nimport {\n  Backdrop,\n  Modal,\n  CloseBtn,\n  Input,\n  Form,\n  SubmitBtn,\n} from 'components/EditModal/EditModal.Styled';\n\nimport { HeadTitle } from 'components/UI/HeadTitle/HeadTitle';\nimport { Notify } from 'notiflix';\nimport { notifySettings } from 'utils/const';\n\nexport const EditModal = ({ contactInfo, toggleEditModal }) => {\n  const [name, setName] = useState(contactInfo.name);\n  const [number, setNumber] = useState(contactInfo.number);\n\n  const dispatch = useDispatch();\n\n  const onBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      toggleEditModal();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === contactInfo.name && number === contactInfo.number) {\n      Notify.info('Edit name or number', notifySettings);\n      return;\n    }\n\n    dispatch(updateContact({ id: contactInfo.id, name, number }));\n\n    toggleEditModal();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Backdrop onClick={onBackdropClick}>\n      <Modal>\n        <CloseBtn type=\"button\" onClick={toggleEditModal}>\n          <CloseIcon />\n        </CloseBtn>\n\n        <HeadTitle title=\"Change contact\" mt={0} />\n\n        <Form onSubmit={handleSubmit}>\n          <Input\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n          />\n\n          <Input\n            value={number}\n            onChange={handleChange}\n            name=\"number\"\n            type=\"tel\"\n            label=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            maxLength=\"16\"\n            autoComplete=\"off\"\n          />\n          <SubmitBtn type=\"submit\">\n            <DownloadDoneIcon />\n          </SubmitBtn>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactList/ContactList';\n\nimport { Wrapper } from 'pages/Contacts/Contacts.Styled';\nimport { EditModal } from 'components/EditModal/EditModal';\nimport { useState } from 'react';\n\nexport default function Contacts() {\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [contactInfo, setContactInfo] = useState(null);\n\n  const toggleEditModal = () => {\n    setIsEditModalOpen(!isEditModalOpen);\n  };\n\n  const getContactInfo = data => {\n    setContactInfo(data);\n  };\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n\n{isEditModalOpen && (\n  <EditModal\n    contactInfo={contactInfo}\n    toggleEditModal={toggleEditModal}\n  />\n      )}\n\n      <ContactsList\n        getContactInfo={getContactInfo}\n        toggleEditModal={toggleEditModal}\n      />\n\n\n    </Wrapper>\n  );\n}\n"],"names":["Title","styled","size","mb","undefined","mt","HeadTitle","title","selectAllContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","normalizeFilterValue","toLowerCase","contact","name","includes","Wrapper","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","target","value","Box","component","onSubmit","e","preventDefault","contactItem","Notify","addContact","FormControl","sx","width","TextField","onChange","label","variant","color","id","type","pattern","autoComplete","required","style","background","maxLength","Stack","Button","endIcon","PersonAddAlt1Outlined","Filter","currentTarget","updateFilterValue","toLocaleLowerCase","minWidth","TableData","ContactListItem","toggleEditModal","getContactInfo","AccountCircleRounded","className","IconButton","onClick","contactInfo","ModeEdit","removeContact","Delete","InfoText","ListWrap","LoadingWrap","Table","TableHead","ContactsList","visibleContacts","useEffect","fetchContacts","length","map","CircularProgress","Backdrop","Modal","CloseBtn","Form","Input","SubmitBtn","EditModal","Close","updateContact","notifySettings","DownloadDone","Contacts","isEditModalOpen","setIsEditModalOpen","setContactInfo","Helmet","data"],"sourceRoot":""}