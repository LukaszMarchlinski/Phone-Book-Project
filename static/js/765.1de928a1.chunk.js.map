{"version":3,"file":"static/js/765.1de928a1.chunk.js","mappings":"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","sources":["components/UI/HeadTitle/HeadTitle.Styled.js","components/UI/HeadTitle/HeadTitle.jsx","components/LoginForm/LoginForm.Styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.Styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n\n  font-size: ${({ size }) => {\n    if (!size) {\n      return '20px';\n    }\n\n    return `${size}px`;\n  }};\n\n  margin-bottom: ${({ mb }) => {\n    if (!!mb || mb === undefined) {\n      return '15px';\n    }\n    return `${mb}px`;\n  }};\n\n  margin-top: ${({ mt }) => {\n    if (!!mt || mt === undefined) {\n      return '15px';\n    }\n    return `${mt}px`;\n  }};\n\n  justify-content: center;\n`;\n","import { Title } from './HeadTitle.Styled';\nimport PropTypes from 'prop-types';\n\nexport const HeadTitle = ({ title, size, mb, mt }) => {\n  return (\n    <Title size={size} mb={mb} mt={mt}>\n      {title}\n    </Title>\n  );\n};\nHeadTitle.propTypes = {\n  title: PropTypes.string,\n  size: PropTypes.number,\n  mb: PropTypes.number,\n  mt: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n  background-color: white;\n  \n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n\nimport { HeadTitle } from 'components/UI/HeadTitle/HeadTitle';\nimport { Wrapper } from 'components/LoginForm/LoginForm.Styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Wrapper>\n      <HeadTitle title={'Login page'} mb={500} size={30} />\n\n      <Box component=\"form\" onSubmit={handleFormSubmit}>\n        <FormControl sx={{ width: '25ch', mt: 1 }}>\n          <div>\n            <TextField\n              type=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              variant=\"outlined\"\n              color=\"info\"\n              sx={{ \n                mb: 2, \n                width: '25ch',\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'white', // Ustaw kolor tła dla całego pola tekstowego\n                  '& fieldset': {\n                    borderColor: '#54b95f', // Kolor obramowania\n                    borderWidth: '3px',\n                  },\n                  '&:hover fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas najechania\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas fokusa\n                    borderWidth: '3px',\n                  },\n                  '& input': {\n                    color: 'black', // Kolor tekstu wewnątrz pola\n                    backgroundColor: 'white', // Kolor tła wewnątrz pola\n                  },\n                  '& input::placeholder': {\n                    color: 'black', // Kolor tekstu placeholdera\n                  },\n                  // Stylizacja dla autofill\n                  '& input:-webkit-autofill': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu\n                    WebkitBoxShadow: '0 0 0 100px white inset', // Zapewnia, że tło pozostaje białe\n                    WebkitTextFillColor: 'black !important', // Kolor tekstu po automatycznym wypełnieniu\n                  },\n                  // Dodatkowe pseudo-stany dla autofill\n                  '& input:-webkit-autofill:hover': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy najechaniu\n                  },\n                  '& input:-webkit-autofill:focus': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy fokusu\n                  },\n                  '& input:-webkit-autofill:active': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy aktywacji\n                  },\n                },\n                '& .MuiInputLabel-root': {\n                  color: 'black', // Kolor etykiety w normalnym stanie\n                },\n                '& .MuiInputLabel-root.Mui-focused': {\n                  color: '#93F600', // Kolor etykiety podczas fokusa\n                  fontSize: '20px',\n                  transform: 'translate(14px, -12px) scale(0.75)', // Transformacja etykiety w stanie focus\n                  backgroundColor: 'white', // Kolor tła etykiety w stanie focus\n                  padding: '0 4px',\n                },\n              }}\n            />\n\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              color=\"info\"\n              sx={{ \n                mb: 2, \n                width: '25ch',\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'white', // Kolor tła dla całego pola tekstowego\n                  '& fieldset': {\n                    borderColor: '#54b95f', // Kolor obramowania\n                    borderWidth: '3px',\n                  },\n                  '&:hover fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas najechania\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: '#1c84fa', // Kolor ramki podczas fokusa\n                    borderWidth: '3px',\n                  },\n                  '& input': {\n                    color: 'black', // Kolor tekstu wewnątrz pola\n                    backgroundColor: 'white', // Kolor tła wewnątrz pola\n                  },\n                  '& input::placeholder': {\n                    color: 'black', // Kolor tekstu placeholdera\n                  },\n                  // Stylizacja dla autofill\n                  '& input:-webkit-autofill': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu\n                    WebkitBoxShadow: '0 0 0 100px white inset', // Zapewnia, że tło pozostaje białe\n                    WebkitTextFillColor: 'black !important', // Kolor tekstu po automatycznym wypełnieniu\n                  },\n                  // Dodatkowe pseudo-stany dla autofill\n                  '& input:-webkit-autofill:hover': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy najechaniu\n                  },\n                  '& input:-webkit-autofill:focus': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy fokusu\n                  },\n                  '& input:-webkit-autofill:active': {\n                    backgroundColor: 'white !important', // Kolor tła po automatycznym wypełnieniu przy aktywacji\n                  },\n                },\n                '& .MuiInputLabel-root': {\n                  color: 'black', // Kolor etykiety w normalnym stanie\n                },\n                '& .MuiInputLabel-root.Mui-focused': {\n                  color: '#93F600', // Kolor etykiety podczas fokusa\n                  fontSize: '20px',\n                  transform: 'translate(14px, -12px) scale(0.75)', // Transformacja etykiety w stanie focus\n                  backgroundColor: 'white', // Kolor tła etykiety w stanie focus\n                  padding: '0 4px',\n                },\n              }}\n            />\n          </div>\n        </FormControl>\n        <Stack>\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"success\"\n            size=\"large\"\n            sx={{\n              mb: 2,\n              background: \"rgb(28, 132, 250, 0.8)\",\n              color: \"#ffffff\", // Kolor tekstu\n              padding: '14px 0px',\n              '&:hover': {\n                backgroundColor: \"#93F600\", // Kolor tła po najechaniu\n                borderColor: '#93F600',\n              },\n            }}\n          >\n            Login\n          </Button>\n        </Stack>\n      </Box>\n    </Wrapper>\n  );\n};","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Wrapper } from 'pages/Login/Login.Styled';\n\nexport default function Login() {\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Wrapper>\n  );\n}\n"],"names":["Title","styled","size","mb","undefined","mt","HeadTitle","title","Wrapper","LoginForm","dispatch","useDispatch","Box","component","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","FormControl","sx","width","TextField","type","name","label","variant","color","backgroundColor","borderColor","borderWidth","WebkitBoxShadow","WebkitTextFillColor","fontSize","transform","padding","Stack","Button","background","Login","Helmet"],"sourceRoot":""}